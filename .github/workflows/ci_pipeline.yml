name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: order_service_db
          POSTGRES_USER: daria
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Tests
        run: ./gradlew test
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/order_service_db
          SPRING_DATASOURCE_USERNAME: daria
          SPRING_DATASOURCE_PASSWORD: password
          USER_SERVICE_URL: http://localhost:8081

      - name: Build Application
        run: ./gradlew build -x test

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/order-service:latest .

      - name: Run Docker Container Test
        run: |
          docker run -d --name test-container -p 8080:8080 \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/order_service_db \
            -e SPRING_DATASOURCE_USERNAME=daria \
            -e SPRING_DATASOURCE_PASSWORD=password \
            ${{ secrets.DOCKERHUB_USERNAME }}/order-service:latest
          sleep 30
          docker logs test-container
          curl -f http://localhost:8080/actuator/health || exit 1
          docker stop test-container
          docker rm test-container

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/order-service
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}